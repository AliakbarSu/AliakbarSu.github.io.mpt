{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ali/Desktop/medical-test/src/components/containers/test/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/components/containers/test/test.vue","mtime":1628382182000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBDaXJjdWxhclRpbWVyIGZyb20gJy4uLy4uL1VJL2NpcmN1bGFyLXRpbWVyL2NpcmN1bGFyLXRpbWVyJwppbXBvcnQgeyBxdWVzdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9kdW1teURhdGEnCmltcG9ydCBOYXZpZ2F0b3IgZnJvbSAnLi9jb21wb25lbnRzL25hdmlnYXRvci9uYXZpZ2F0b3InCmltcG9ydCBDaXJjbGU4IGZyb20gJ3Z1ZS1sb2FkaW5nLXNwaW5uZXIvc3JjL2NvbXBvbmVudHMvQ2lyY2xlOCcKaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gJy4uLy4uL1VJL3Byb2dyZXNzLWJhci9wcm9ncmVzc0JhcicKCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXN0aW9uczogW10sCiAgICAgIHF1ZXN0aW9uOiB7fSwKICAgICAgc3VibWl0dGVkX3F1ZXN0aW9uczogW10sCiAgICAgIHNraXBwZWRfcXVlc3Rpb25zOiBbXSwKICAgICAgc3VibWl0dGVkX2Fuc3dlcjoge30sCiAgICAgIHRlc3RFbmRzSW46IDAsCiAgICAgIGludGVydmFsOiBudWxsLAogICAgICB0aW1lTGltaXQ6IDEuMjZlKzcsCiAgICAgIHRpbWVSZW1haW5lZDoge2g6IDAsIG06IDAsIHM6IDAsIG1pbDogMH0sCiAgICAgIGlzVGltZU92ZXI6IGZhbHNlLAogICAgICBoYXNUZXN0U3RhcnRlZDogZmFsc2UsCiAgICAgIGxvYWRpbmc6IHRydWUKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5hdmlnYXRvciwKICAgIENpcmNsZTgsCiAgICBQcm9ncmVzc0JhcgogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucXVlc3Rpb25zID0gcXVlc3Rpb25zCiAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgdGhpcy5xdWVzdGlvbnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEN1cnJlbnRUZXN0Lm1hcCgocSwgaW5kZXgpID0+ICh7Li4ucSwgbnVtYmVyOiBpbmRleCArIDF9KSkKICAgIHRoaXMucXVlc3Rpb24gPSB0aGlzLnF1ZXN0aW9uc1swXQogICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRTdWJqZWN0c1BvaW50cyIsIHRoaXMucXVlc3Rpb25zKQogIH0sCiAgbWV0aG9kczogewogICAgc3RhcnQoKSB7CiAgICAgIHRoaXMuc2V0VGltZXIoKQogICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VGVzdFN0YXJ0VGltZSIsIG5vdykKICAgICAgdGhpcy5xdWVzdGlvbiA9IHsuLi50aGlzLnF1ZXN0aW9uc1swXSwgc3RhcnRBdDogbm93fQogICAgfSwKICAgIHNldFRpbWVyKCkgewogICAgICBpZih0aGlzLmludGVydmFsKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKQogICAgICB9CiAgICAgIHRoaXMuaGFzVGVzdFN0YXJ0ZWQgPSB0cnVlCiAgICAgIHRoaXMudGVzdEVuZHNJbiA9IHRoaXMudGltZUxpbWl0ICsgbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKQogICAgICAgIGNvbnN0IHQgPSB0aGlzLnRlc3RFbmRzSW4gLSBub3cKICAgICAgICB0aGlzLnRpbWVSZW1haW5lZC5oID0gTWF0aC5mbG9vcigodCUoMTAwMCAqIDYwICogNjAgKiAyNCkpLygxMDAwICogNjAgKiA2MCkpCiAgICAgICAgdGhpcy50aW1lUmVtYWluZWQubSA9IE1hdGguZmxvb3IoKHQgJSAoMTAwMCAqIDYwICogNjApKSAvICgxMDAwICogNjApKQogICAgICAgIHRoaXMudGltZVJlbWFpbmVkLnMgPSBNYXRoLmZsb29yKCh0ICUgKDEwMDAgKiA2MCkpIC8gMTAwMCkKICAgICAgICB0aGlzLnRpbWVSZW1haW5lZC5taWwgPSB0CiAgICAgICAgLy8xLjI1MjhlKzcKICAgICAgICBpZiAodCA8IDApIHsgCiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpCiAgICAgICAgICB0aGlzLmlzVGltZU92ZXIgPSB0cnVlCiAgICAgICAgICB0aGlzLiRzd2FsLmZpcmUoCiAgICAgICAgICAgICdUaW1lIE92ZXInLAogICAgICAgICAgICAnWW91ciB0aW1lIGlzIG92ZXIhJywKICAgICAgICAgICAgJ2Vycm9yJwogICAgICAgICAgKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGVSZXN1bHRzKCkKICAgICAgICAgIH0pCiAgICAgICAgICAKICAgICAgICB9IAogICAgICB9LCAxMDApCiAgICB9LAogICAgbmV4dCgpIHsKICAgICAgdGhpcy5yZW1vdmVRdWVzdGlvbigpCiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgIHRoaXMuc3VibWl0dGVkX3F1ZXN0aW9ucy5wdXNoKHsKICAgICAgICAuLi50aGlzLnF1ZXN0aW9uLCAKICAgICAgICBzdWJtaXR0ZWRfYW5zd2VyOiB0aGlzLnN1Ym1pdHRlZF9hbnN3ZXIsCiAgICAgICAgZW5kQXQ6IG5vdwogICAgICB9KQoKICAgICAgdGhpcy5yZXNldEFuc3dlcnMoKQoKCiAgICAgIGlmKHRoaXMuaXNUZXN0T3ZlcikgewogICAgICAgIHRoaXMuY2FsY3VsYXRlUmVzdWx0cygpCiAgICAgIH1lbHNlIGlmKHRoaXMuaXNMYXN0UXVlc3Rpb24pIHsKICAgICAgICB0aGlzLmFwcGx5U2tpcHBlZFF1ZXN0aW9ucygpCiAgICAgIH0KCiAgICAgIHRoaXMuc2V0TmV4dFF1ZXN0aW9uKCkKICAgIH0sCiAgICByZW1vdmVRdWVzdGlvbigpIHsKICAgICAgdGhpcy5xdWVzdGlvbnMgPSB0aGlzLnF1ZXN0aW9ucy5maWx0ZXIocSA9PiBxLmlkICE9PSB0aGlzLnF1ZXN0aW9uLmlkKQogICAgfSwKICAgIHNldE5leHRRdWVzdGlvbigpIHsKICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgICAgY29uc3QgY3VycmVudEluZGV4ID0gdGhpcy5xdWVzdGlvbnMuZmluZEluZGV4KHEgPT4gcS5pZCA9PSB0aGlzLnF1ZXN0aW9ucy5pZCkKICAgICAgdGhpcy5xdWVzdGlvbiA9IGN1cnJlbnRJbmRleCA9PSB0aGlzLnF1ZXN0aW9ucy5sZW5ndGggLSAxID8gdGhpcy5xdWVzdGlvbiA6IHsuLi50aGlzLnF1ZXN0aW9uc1tjdXJyZW50SW5kZXggKyAxXSwgc3RhcnRBdDogbm93fQogICAgfSwKICAgIGFwcGx5U2tpcHBlZFF1ZXN0aW9ucygpIHsKICAgICAgdGhpcy5xdWVzdGlvbnMgPSB0aGlzLnNraXBwZWRfcXVlc3Rpb25zCiAgICAgIHRoaXMuc2tpcHBlZF9xdWVzdGlvbnMgPSBbXQogICAgfSwKICAgIGNhbGN1bGF0ZVJlc3VsdHMoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJzdWJtaXRUZXN0IiwgdGhpcy5zdWJtaXR0ZWRfcXVlc3Rpb25zKQogICAgICAvLyB0aGlzLiRyb3V0ZXIucHVzaCgnL3Rlc3QtcmVzdWx0cycpCiAgICB9LAogICAgcmVzZXRBbnN3ZXJzKCkgewogICAgICB0aGlzLnN1Ym1pdHRlZF9hbnN3ZXIgPSB7fQogICAgICB0aGlzLnNob3dFeHBsYW5hdGlvbnMgPSBmYWxzZQogICAgfSwKICAgIHNraXAoKSB7CiAgICAgIHRoaXMucmVtb3ZlUXVlc3Rpb24oKQogICAgICB0aGlzLnNraXBwZWRfcXVlc3Rpb25zID0gWy4uLnRoaXMuc2tpcHBlZF9xdWVzdGlvbnMuZmlsdGVyKHNxID0+IHNxLmlkICE9PSB0aGlzLnF1ZXN0aW9uLmlkKSwgdGhpcy5xdWVzdGlvbl0KICAgICAgaWYodGhpcy5pc0xhc3RRdWVzdGlvbikgewogICAgICAgIHRoaXMuYXBwbHlTa2lwcGVkUXVlc3Rpb25zKCkKICAgICAgfQogICAgICB0aGlzLnJlc2V0QW5zd2VycygpCiAgICAgIHRoaXMuc2V0TmV4dFF1ZXN0aW9uKCkKICAgIH0sCiAgICBlbmRUZXN0KCkgewogICAgICB0aGlzLiRzd2FsKHsKICAgICAgICB0aXRsZTogJ0FyZSB5b3Ugc3VyZT8nLAogICAgICAgIHRleHQ6ICdZb3Ugd2lsbCBub3QgYmUgYWJsZSB0byByZXR1cm4gdG8gdGhpcyB0ZXN0IScsCiAgICAgICAgaWNvbjogJ3dhcm5pbmcnLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdZZXMsIGVuZCB0ZXN0IScsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ05vLCBjb250aW51ZScKICAgICAgfSkudGhlbigoe3ZhbHVlfSkgPT4gewogICAgICAgIGlmKHZhbHVlKSB7CiAgICAgICAgICB0aGlzLmNhbGN1bGF0ZVJlc3VsdHMoKQogICAgICAgIH0KICAgICAgfSkgICAgCiAgICB9LAogICAgc2VsZWN0QW5zd2VyKGFuc3dlcikgewogICAgICB0aGlzLnN1Ym1pdHRlZF9hbnN3ZXIgPSBhbnN3ZXIKICAgIH0sCiAgICBpc1NlbGVjdGVkKGFuc3dlcikgewogICAgICByZXR1cm4gdGhpcy5zdWJtaXR0ZWRfYW5zd2VyLmlkID09IGFuc3dlci5pZAogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc1Rlc3RPdmVyKCkgewogICAgICByZXR1cm4gKHRoaXMucXVlc3Rpb25zLmxlbmd0aCA9PSAwICYmIHRoaXMuc2tpcHBlZF9xdWVzdGlvbnMubGVuZ3RoID09IDAgKXx8IHRoaXMuaXNUaW1lT3ZlcgogICAgfSwKICAgIGlzTGFzdFF1ZXN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbnMubGVuZ3RoID09PSAwCiAgICB9LAogICAgdGltZVByb2dyZXNzKCkgewogICAgICByZXR1cm4gMTAwIC0gKCgodGhpcy50aW1lTGltaXQgLSB0aGlzLnRpbWVSZW1haW5lZC5taWwpIC8gdGhpcy50aW1lTGltaXQpICogMTAwKQogICAgfQogIH0KfQo="},{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"test.vue","sourceRoot":"src/components/containers/test","sourcesContent":["<template>\n<v-container>\n  <div class=\"test\">\n\n    <div v-if=\"loading\" class=\"spinner__container\">\n      <Circle8></Circle8>\n    </div>\n    <div class=\"content\">\n      <Navigator @start=\"start\" v-if=\"!hasTestStarted && !loading\"/>\n      <div v-else>\n        <div v-if=\"!loading\">\n          <span>Time Remaining: </span>\n          <span>{{timeRemained.h}} : {{timeRemained.m}} : {{timeRemained.s}}</span>\n          <ProgressBar :progress=\"timeProgress\"/>\n        </div>\n        <div class=\"question\" v-if=\"!loading\">\n          <span>Question: {{question.number}}</span>\n          <p class=\"question__question\" v-html=\"question.title\"></p>\n          <div v-if=\"question.images && question.media.length\" class=\"content__thumbnail\">\n            <img :src=\"question.media[0]\" class=\"content__img\">\n          </div>\n          <!-- <CircularTimer/> -->\n          <ul class=\"question__answers\">\n            <li class=\"question__answer\" \n              v-for=\"choice in question.options\" \n              :key=\"choice.id\">\n                <i v-if=\"!isSelected(choice)\" class=\"far fa-dot-circle\" @click=\"selectAnswer(choice)\" ></i>\n                <i v-else \n                  @click=\"selectAnswer(choice)\" \n                  class=\"fas fa-dot-circle\" \n                ></i>\n                <span \n                  @click=\"selectAnswer(choice)\" \n                  class=\"answer__text\" \n                >({{choice.id}}) {{choice.text}}</span>\n              </li>\n          </ul>\n        </div>\n        <div class=\"actions\" v-if=\"!loading\">\n          <button class=\"actions__action\" @click=\"next\">Next</button>\n          <button class=\"actions__action actions--yellow\" @click=\"skip\">Flag</button>\n          <button class=\"actions__action actions--red\" @click=\"endTest\">End test</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  </v-container>\n</template>\n\n<script>\n// import CircularTimer from '../../UI/circular-timer/circular-timer'\nimport { questions } from '../../../dummyData'\nimport Navigator from './components/navigator/navigator'\nimport Circle8 from 'vue-loading-spinner/src/components/Circle8'\nimport ProgressBar from '../../UI/progress-bar/progressBar'\n\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      question: {},\n      submitted_questions: [],\n      skipped_questions: [],\n      submitted_answer: {},\n      testEndsIn: 0,\n      interval: null,\n      timeLimit: 1.26e+7,\n      timeRemained: {h: 0, m: 0, s: 0, mil: 0},\n      isTimeOver: false,\n      hasTestStarted: false,\n      loading: true\n    }\n  },\n  components: {\n    Navigator,\n    Circle8,\n    ProgressBar\n  },\n  mounted() {\n    this.questions = questions\n    this.loading = false\n    this.questions = this.$store.getters.getCurrentTest.map((q, index) => ({...q, number: index + 1}))\n    this.question = this.questions[0]\n    this.$store.commit(\"setSubjectsPoints\", this.questions)\n  },\n  methods: {\n    start() {\n      this.setTimer()\n      const now = new Date().getTime(); \n      this.$store.commit(\"setTestStartTime\", now)\n      this.question = {...this.questions[0], startAt: now}\n    },\n    setTimer() {\n      if(this.interval) {\n        clearInterval(this.interval)\n      }\n      this.hasTestStarted = true\n      this.testEndsIn = this.timeLimit + new Date().getTime()\n      this.interval = setInterval(() => {\n        const now = new Date().getTime()\n        const t = this.testEndsIn - now\n        this.timeRemained.h = Math.floor((t%(1000 * 60 * 60 * 24))/(1000 * 60 * 60))\n        this.timeRemained.m = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60))\n        this.timeRemained.s = Math.floor((t % (1000 * 60)) / 1000)\n        this.timeRemained.mil = t\n        //1.2528e+7\n        if (t < 0) { \n          clearInterval(this.interval)\n          this.isTimeOver = true\n          this.$swal.fire(\n            'Time Over',\n            'Your time is over!',\n            'error'\n          ).then(() => {\n            this.calculateResults()\n          })\n          \n        } \n      }, 100)\n    },\n    next() {\n      this.removeQuestion()\n      const now = new Date().getTime()\n      this.submitted_questions.push({\n        ...this.question, \n        submitted_answer: this.submitted_answer,\n        endAt: now\n      })\n\n      this.resetAnswers()\n\n\n      if(this.isTestOver) {\n        this.calculateResults()\n      }else if(this.isLastQuestion) {\n        this.applySkippedQuestions()\n      }\n\n      this.setNextQuestion()\n    },\n    removeQuestion() {\n      this.questions = this.questions.filter(q => q.id !== this.question.id)\n    },\n    setNextQuestion() {\n      const now = new Date().getTime()\n      const currentIndex = this.questions.findIndex(q => q.id == this.questions.id)\n      this.question = currentIndex == this.questions.length - 1 ? this.question : {...this.questions[currentIndex + 1], startAt: now}\n    },\n    applySkippedQuestions() {\n      this.questions = this.skipped_questions\n      this.skipped_questions = []\n    },\n    calculateResults() {\n      this.$store.dispatch(\"submitTest\", this.submitted_questions)\n      // this.$router.push('/test-results')\n    },\n    resetAnswers() {\n      this.submitted_answer = {}\n      this.showExplanations = false\n    },\n    skip() {\n      this.removeQuestion()\n      this.skipped_questions = [...this.skipped_questions.filter(sq => sq.id !== this.question.id), this.question]\n      if(this.isLastQuestion) {\n        this.applySkippedQuestions()\n      }\n      this.resetAnswers()\n      this.setNextQuestion()\n    },\n    endTest() {\n      this.$swal({\n        title: 'Are you sure?',\n        text: 'You will not be able to return to this test!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, end test!',\n        cancelButtonText: 'No, continue'\n      }).then(({value}) => {\n        if(value) {\n          this.calculateResults()\n        }\n      })    \n    },\n    selectAnswer(answer) {\n      this.submitted_answer = answer\n    },\n    isSelected(answer) {\n      return this.submitted_answer.id == answer.id\n    },\n  },\n  computed: {\n    isTestOver() {\n      return (this.questions.length == 0 && this.skipped_questions.length == 0 )|| this.isTimeOver\n    },\n    isLastQuestion() {\n      return this.questions.length === 0\n    },\n    timeProgress() {\n      return 100 - (((this.timeLimit - this.timeRemained.mil) / this.timeLimit) * 100)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.test {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n}\n\n.content {\n  padding: 12px;\n  text-align: left;\n  @media(min-width: 1200px) {\n    width: 1200px;\n    margin: auto;\n  }\n  font-family: 'Roboto', sans-serif;\n}\n\n.content__thumbnail {\n  display: flex;\n  justify-content: center;\n}\n\n.content__img {\n  width: auto;\n  height: 30vh;\n}\n\n.mode__btn-container {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.mode__btn {\n  border: none;\n  padding: 12px;\n  width: 120px;\n  background: #8d8df5;\n  border: 1px solid #8d8df5;\n  color: white;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    background: white;\n    color: #8d8df5;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n}\n\n.question__question {\n  margin-top: 20px;\n}\n\n.question__answer {\n  padding: 5px;\n}\n\n\n\n.answer__text {\n  cursor: pointer;\n  padding-left: 8px;\n}\n\n\n.answer__text--correct {\n  color: #9adc9a;\n}\n\n.answer__text--wrong {\n  color: #f36c6c;\n}\n\n.fa-dot-circle {\n  cursor: pointer;\n}\n\n\n.question__answers {\n  border-top: 1px solid #e6e6e6;\n  padding: 12px 50px;\n  list-style: none;\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.actions__action {\n  position: relative;\n  overflow: hidden;\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-right: 10px;\n  background: #70bf70;\n  border: 1px solid #70bf70;\n  color: white;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  outline: none;\n  &:hover {\n    cursor: pointer;\n    transition: 0.3s;\n    background: white;\n    color: #70bf70;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n  &:active {\n    outline: none;\n  }\n}\n\n\n.actions__action:after {\n  content: \"\";\n  background: #f1f1f1;\n  display: block;\n  position: absolute;\n  padding-top: 300%;\n  padding-left: 350%;\n  margin-left: -20px !important;\n  margin-top: -120%;\n  opacity: 0;\n  transition: all 0.8s\n}\n\n.actions__action:active:after {\n  padding: 0;\n  margin: 0;\n  opacity: 1;\n  transition: 0s\n}\n\n.spinner__container {\n  position: absolute;\n  left: 0;\n  right: 0;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  top: 0;\n  bottom: 0;\n  align-items: center;\n  background: #7575759e;\n}\n\n.actions--red {\n  background: #f36c6c;\n  border: 1px solid #f36c6c;\n  &:hover {\n    color: #f36c6c;\n  }\n}\n\n\n.actions--yellow {\n  background: #c5c56d;\n  border: 1px solid #c5c56d;\n  &:hover {\n    color: #c5c56d;\n  }\n}\n\n.question__explanation {\n  padding: 12px;\n  border-radius: 5px;\n  margin-top: 5px;\n}\n\n.question__explanation--red {\n  background: #ef5e5e;\n}\n\n.question__explanation--green {\n  background: #60e460;\n}\n\n\n</style>"]}]}