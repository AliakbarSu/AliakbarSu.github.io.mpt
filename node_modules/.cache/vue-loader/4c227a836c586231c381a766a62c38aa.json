{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ali/Desktop/medical-test/src/components/containers/results/results.vue?vue&type=style&index=0&id=673ce8f0&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/components/containers/results/results.vue","mtime":1627368454000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250ZW50IHsKICBwYWRkaW5nOiAxMnB4OwogIEBtZWRpYShtaW4td2lkdGg6IDEyMDBweCkgewogICAgd2lkdGg6IDEyMDBweDsKICAgIG1hcmdpbjogYXV0bzsKICB9CiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmOwp9CgouYWxlcnQgewogIGJhY2tncm91bmQ6ICM5NmU0OTY7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgcGFkZGluZzogOHB4IDA7CiAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpOwp9CgouYWxlcnQtLXJlZCB7CiAgYmFja2dyb3VuZDogI2VhNjQ2NDsKfQoKLmFsZXJ0X190ZXh0IHsKICBjb2xvcjogd2hpdGU7CiAgcGFkZGluZzogN3B4OwogIGZvbnQtc2l6ZTogMWVtOwogIG1hcmdpbjogMDsKfQoKCi5yZXN1bHRzIHsKICBib3JkZXI6IDFweCBzb2xpZCAjZWNlY2VjOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIHBhZGRpbmc6IDEycHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KCi5yZXN1bHRzX19yZXN1bHQgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi5yZXN1bHRfX3RpdGxlIHsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgcGFkZGluZzogMTVweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgY29sb3I6IHdoaXRlOwogIHdpZHRoOiAyMDBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpOwp9CgoucmVzdWx0X19zY29yZSB7CiAgZm9udC1zaXplOiAyZW07CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5yZXN1bHRfX3RpdGxlLS1ncmVlbiB7CiAgYmFja2dyb3VuZDogIzUzYWI1MzsKfQoKLnJlc3VsdF9fdGl0bGUtLXJlZCB7CiAgYmFja2dyb3VuZDogI2ViNjQ2MzsKfQoKLnJlc3VsdF9fdGl0bGUtLW9yYW5nZSB7CiAgYmFja2dyb3VuZDogI2Y5YWUxOTsKfQoKCi5zZWN0aW9uc19fd3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgZmxleC13cmFwOiB3cmFwOwp9CgoKLnNlY3Rpb25zIHsKICB3aWR0aDogNDglOwogIGJhY2tncm91bmQ6ICNlZmVmZWY7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIHBhZGRpbmc6IDEycHg7CiAgZGlzcGxheTogZmxleDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtd3JhcDogd3JhcDsKICBtYXJnaW4tdG9wOiAxMHB4OwogIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKTsKfQoKLmdyYXBoX190aXRsZSB7CiAgd2lkdGg6IDEwMCU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgouYWN0aW9ucyB7CiAgcGFkZGluZzogMTJweDsKICBtYXJnaW4tdG9wOiAxMnB4Owp9CgouYWN0aW9uc19fYnV0dG9ucyB7CiAgcGFkZGluZzogMTJweDsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgd2lkdGg6IDE1MHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kOiAjNWNiZjVjOwogIGJvcmRlcjogMXB4IHNvbGlkICM1Y2JmNWM7CiAgY29sb3I6IHdoaXRlOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMik7CiAgJjpob3ZlciB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB0cmFuc2l0aW9uOiAwLjNzOwogICAgY29sb3I6ICM1Y2JmNWM7CiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICB9Cn0KCg=="},{"version":3,"sources":["results.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"results.vue","sourceRoot":"src/components/containers/results","sourcesContent":["<template>\n<div class=\"content\">\n  <div class=\"alert\" :class=\"{'alert--red': !passed}\">\n    <p class=\"alert__text\" v-if=\"passed\">Congratulations you have passed the test</p>\n    <p class=\"alert__text\" v-else>Unfortunately! you failed the test</p>\n  </div>\n  <p>Scores Breakdown</p>\n  <div class=\"results\">\n    <div class=\"results__result\">\n      <p class=\"result__title result__title--orange\">Overall Score</p>\n      <span class=\"result__score\">{{overallScore}}</span>\n    </div>\n    <div class=\"results__result\">\n      <p class=\"result__title result__title--green\">Correct Questions</p>\n      <span class=\"result__score\">{{correct}}</span>\n    </div>\n    <div class=\"results__result\">\n      <p class=\"result__title result__title--red\">Incorrect Questions</p>\n      <span class=\"result__score\">{{incorrect}}</span>\n    </div>\n  </div>\n  <p>Score Graphs</p>\n  <div class=\"sections__wrapper\">\n    <div class=\"sections\">\n      <p class=\"graph__title\">Your Scores Percentage at Different Categories</p>\n      <Bar :data=\"categoriesScores\" :options=\"options\"/>\n    </div>\n    <div class=\"sections\">\n      <p class=\"graph__title\">Accuracy Accross Questions</p>\n      <Line-graph :data=\"accuracyOverTime\" :options=\"options\"/>\n    </div>\n  </div>\n  <p>Your Timing</p>\n  <div class=\"sections__wrapper\">\n    <div class=\"sections\">\n      <p class=\"graph__title\">Average Time Taken at Each Category</p>\n      <Bar :data=\"averageCategoryTiming\" :options=\"options\"/>\n    </div>\n    <div class=\"sections\">\n      <p class=\"graph__title\">Timing Performance Accross Questions</p>\n      <Line-graph :data=\"speedOverTime\" :options=\"options\"/>\n    </div>\n  </div>\n  <p>Performance at Each Category</p>\n  <div class=\"sections__wrapper\">\n    <div class=\"sections\">\n      <p class=\"graph__title\">Correct Answers</p>\n      <Pie :data=\"sectionsCorrectScores\" :options=\"options\"/>\n    </div>\n    <div class=\"sections\">\n      <p class=\"graph__title\">Incorrect Answers</p>\n      <Pie :data=\"sectionsIncorrectScores\" :options=\"options\"/>\n    </div>\n  </div>\n  <div class=\"actions\">\n    <button class=\"actions__buttons\">Retake</button>\n    <button class=\"actions__buttons\" @click=\"navigateToDashboard\">Go to dashboard</button>\n    <button class=\"actions__buttons\">Print results</button>\n  </div>\n</div>\n  \n</template>\n\n<script>\nimport Bar from './components/bar/bar'\nimport Pie from './components/pie/pie'\nimport Line from './components/line/line'\n\nconst backgroundColors = [\n  'rgba(255, 99, 132, 0.2)',\n  'rgba(54, 162, 235, 0.2)',\n  'rgba(255, 206, 86, 0.2)',\n  'rgba(75, 192, 192, 0.2)',\n  'rgba(153, 102, 255, 0.2)',\n  'rgba(255, 159, 64, 0.2)'\n]\n\nconst borderColors = [\n  'rgba(255, 99, 132, 1)',\n  'rgba(54, 162, 235, 1)',\n  'rgba(255, 206, 86, 1)',\n  'rgba(75, 192, 192, 1)',\n  'rgba(153, 102, 255, 1)',\n  'rgba(255, 159, 64, 1)'\n]\n\nexport default {\n  data() {\n    return {\n      options: {\n          scales: {\n              yAxes: [{\n                  ticks: {\n                      beginAtZero: true\n                  }\n              }]\n          }\n      },\n      passed: false\n    }\n  },\n  mounted() {\n    if(!this.$store.getters.getResults.length) {\n      return this.$router.push(\"/\")\n    }\n    if(this.overallScore >= 250) {\n      this.passed = true\n      this.$store.dispatch(\"updateTestsStatus\", \"passed\")\n      this.$swal.fire(\n        'You Passed',\n        'Congratulations! you passed the test',\n        'success'\n      )\n    }else {\n      this.passed = false\n      this.$store.dispatch(\"updateTestsStatus\", \"failed\")\n      this.$swal.fire(\n        'You Failed',\n        'Unfortunately! you failed the test',\n        'error'\n      )\n    }\n  },\n  components: {\n    Bar,\n    Pie,\n    \"Line-graph\": Line\n  },\n  methods: {\n    navigateToDashboard() {\n      this.$router.push(\"/\")\n    }\n  },\n  computed: {\n    sectionsCorrectScores() {\n      return {\n        labels: this.$store.getters.getCategoriesResults.map(section => section.section),\n        datasets: [{\n              label: '# of Votes',\n              data: this.$store.getters.getCategoriesResults.map(section => section.correct),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1\n          }]\n      }\n    },\n    sectionsIncorrectScores() {\n      return {\n        labels: this.$store.getters.getCategoriesResults.map(section => section.section),\n        datasets: [{\n              label: '# of Votes',\n              data: this.$store.getters.getCategoriesResults.map(section => section.incorrect),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1\n          }]\n      }\n    },\n    averageCategoryTiming() {\n      return {\n        labels: this.$store.getters.getCategoriesResults.map(section => section.section),\n        datasets: [{\n              label: 'your average time spent on questions of specific category',\n              data: this.$store.getters.getCategoriesResults.map(section => section.averageAnsweringTime),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1\n          }]\n      }\n    },\n    overallScore() {\n      return this.$store.getters.getOverallScore.score\n    },\n    correct() {\n      return this.$store.getters.getOverallScore.correct\n    },\n    incorrect() {\n      return this.$store.getters.getOverallScore.incorrect\n    },\n    accuracyOverTime() {\n      return {\n        labels: this.$store.getters.getAccuracyOverTime.map(qa => qa.time),\n        datasets: [{\n              label: 'your accuracy over the course of the test',\n              data: this.$store.getters.getAccuracyOverTime.map(qa => qa.count),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 3\n          }]\n      }\n    },\n    speedOverTime() {\n      return {\n        labels: this.$store.getters.getSpeedOverTime.map(qa => qa.time + \" minutes\"),\n        datasets: [{\n              label: 'time spent on questions at each time interval',\n              data: this.$store.getters.getSpeedOverTime.map(qa => qa.answeredIn),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1\n          }]\n      }\n    },\n    categoriesScores() {\n      return {\n        labels: this.$store.getters.getCategoriesResults.map(qa => qa.section),\n        datasets: [{\n              label: 'your total score at each category',\n              data: this.$store.getters.getCategoriesResults.map(qa => qa.scorePercentage),\n              backgroundColor: backgroundColors,\n              borderColor: borderColors,\n              borderWidth: 1\n          }]\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.content {\n  padding: 12px;\n  @media(min-width: 1200px) {\n    width: 1200px;\n    margin: auto;\n  }\n  font-family: 'Roboto', sans-serif;\n}\n\n.alert {\n  background: #96e496;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  padding: 8px 0;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n}\n\n.alert--red {\n  background: #ea6464;\n}\n\n.alert__text {\n  color: white;\n  padding: 7px;\n  font-size: 1em;\n  margin: 0;\n}\n\n\n.results {\n  border: 1px solid #ececec;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  padding: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.results__result {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.result__title {\n  margin-right: 20px;\n  padding: 15px;\n  border-radius: 5px;\n  color: white;\n  width: 200px;\n  text-align: center;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n}\n\n.result__score {\n  font-size: 2em;\n  font-weight: bold;\n}\n\n.result__title--green {\n  background: #53ab53;\n}\n\n.result__title--red {\n  background: #eb6463;\n}\n\n.result__title--orange {\n  background: #f9ae19;\n}\n\n\n.sections__wrapper {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n\n.sections {\n  width: 48%;\n  background: #efefef;\n  border-radius: 5px;\n  padding: 12px;\n  display: flex;\n  box-sizing: border-box;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n}\n\n.graph__title {\n  width: 100%;\n  text-align: center;\n}\n\n.actions {\n  padding: 12px;\n  margin-top: 12px;\n}\n\n.actions__buttons {\n  padding: 12px;\n  margin-right: 20px;\n  width: 150px;\n  text-align: center;\n  background: #5cbf5c;\n  border: 1px solid #5cbf5c;\n  color: white;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  &:hover {\n    cursor: pointer;\n    transition: 0.3s;\n    color: #5cbf5c;\n    background: white;\n  }\n}\n\n</style>"]}]}