{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ali/Desktop/medical-test/src/components/containers/admin/questions/questions.vue?vue&type=template&id=50a9919e&scoped=true&","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/components/containers/admin/questions/questions.vue","mtime":1627368454000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}