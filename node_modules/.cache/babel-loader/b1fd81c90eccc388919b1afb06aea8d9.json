{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js!/Users/Ali/Desktop/medical-test/node_modules/eslint-loader/index.js??ref--13-0!/Users/Ali/Desktop/medical-test/src/auth/index.js","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/auth/index.js","mtime":1627518058000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Ali/Desktop/medical-test/src/auth/index.js"],"names":["Vue","createAuth0Client","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","instance","getInstance","useAuth0","onRedirectCallback","redirectUri","origin","options","data","loading","isAuthenticated","user","auth0Client","popupOpen","error","methods","loginWithPopup","config","getUser","console","handleRedirectCallback","loginWithRedirect","o","getIdTokenClaims","getTokenSilently","getTokenWithPopup","logout","created","client_id","clientId","redirect_uri","search","includes","log","appState","Auth0Plugin","install","prototype","$auth"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,SAChCC,MAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgCC,QAAQ,CAACC,KAAzC,EAAgDJ,MAAM,CAACK,QAAP,CAAgBC,QAAhE,CADgC;AAAA,CAAlC;;AAGA,IAAIC,QAAJ;AAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMD,QAAN;AAAA,CAApB;AAEP;;AACA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAIlB;AAAA,mCAHJC,kBAGI;AAAA,MAHJA,kBAGI,sCAHiBX,yBAGjB;AAAA,8BAFJY,WAEI;AAAA,MAFJA,WAEI,iCAFUX,MAAM,CAACK,QAAP,CAAgBO,MAE1B;AAAA,MADDC,OACC;;AACJ,MAAIN,QAAJ,EAAc,OAAOA,QAAP,CADV,CAGJ;;AACAA,EAAAA,QAAQ,GAAG,IAAIV,GAAJ,CAAQ;AACjBiB,IAAAA,IADiB,kBACV;AACL,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,WAAW,EAAE,IAJR;AAKLC,QAAAA,SAAS,EAAE,KALN;AAMLC,QAAAA,KAAK,EAAE;AANF,OAAP;AAQD,KAVgB;AAWjBC,IAAAA,OAAO,EAAE;AACP;AACMC,MAAAA,cAFC,0BAEcT,OAFd,EAEuBU,MAFvB,EAE+B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACpC,kBAAA,KAAI,CAACJ,SAAL,GAAiB,IAAjB;AADoC;AAAA;AAAA,yBAI5B,KAAI,CAACD,WAAL,CAAiBI,cAAjB,CAAgCT,OAAhC,EAAyCU,MAAzC,CAJ4B;;AAAA;AAAA;AAAA,yBAKhB,KAAI,CAACL,WAAL,CAAiBM,OAAjB,EALgB;;AAAA;AAKlC,kBAAA,KAAI,CAACP,IAL6B;AAAA;AAAA,yBAML,KAAI,CAACC,WAAL,CAAiBF,eAAjB,EANK;;AAAA;AAMlC,kBAAA,KAAI,CAACA,eAN6B;AAOlC,kBAAA,KAAI,CAACI,KAAL,GAAa,IAAb;AAPkC;AAAA;;AAAA;AAAA;AAAA;AASlC,kBAAA,KAAI,CAACA,KAAL,eATkC,CAUlC;;AACAK,kBAAAA,OAAO,CAACL,KAAR;;AAXkC;AAAA;AAalC,kBAAA,KAAI,CAACD,SAAL,GAAiB,KAAjB;AAbkC;;AAAA;AAAA;AAAA,yBAgBlB,KAAI,CAACD,WAAL,CAAiBM,OAAjB,EAhBkB;;AAAA;AAgBpC,kBAAA,KAAI,CAACP,IAhB+B;AAiBpC,kBAAA,KAAI,CAACD,eAAL,GAAuB,IAAvB;;AAjBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBrC,OApBM;;AAqBP;AACMU,MAAAA,sBAtBC,oCAsBwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B,kBAAA,MAAI,CAACX,OAAL,GAAe,IAAf;AAD6B;AAAA;AAAA,yBAGrB,MAAI,CAACG,WAAL,CAAiBQ,sBAAjB,EAHqB;;AAAA;AAAA;AAAA,yBAIT,MAAI,CAACR,WAAL,CAAiBM,OAAjB,EAJS;;AAAA;AAI3B,kBAAA,MAAI,CAACP,IAJsB;AAK3B,kBAAA,MAAI,CAACD,eAAL,GAAuB,IAAvB;AACA,kBAAA,MAAI,CAACI,KAAL,GAAa,IAAb;AAN2B;AAAA;;AAAA;AAAA;AAAA;AAQ3B,kBAAA,MAAI,CAACA,KAAL;;AAR2B;AAAA;AAU3B,kBAAA,MAAI,CAACL,OAAL,GAAe,KAAf;AAV2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY9B,OAlCM;;AAmCP;AACAY,MAAAA,iBApCO,6BAoCWC,CApCX,EAoCc;AACnB,eAAO,KAAKV,WAAL,CAAiBS,iBAAjB,CAAmCC,CAAnC,CAAP;AACD,OAtCM;;AAuCP;AACAC,MAAAA,gBAxCO,4BAwCUD,CAxCV,EAwCa;AAClB,eAAO,KAAKV,WAAL,CAAiBW,gBAAjB,CAAkCD,CAAlC,CAAP;AACD,OA1CM;;AA2CP;AACAE,MAAAA,gBA5CO,4BA4CUF,CA5CV,EA4Ca;AAClB,eAAO,KAAKV,WAAL,CAAiBY,gBAAjB,CAAkCF,CAAlC,CAAP;AACD,OA9CM;;AA+CP;AAEAG,MAAAA,iBAjDO,6BAiDWH,CAjDX,EAiDc;AACnB,eAAO,KAAKV,WAAL,CAAiBa,iBAAjB,CAAmCH,CAAnC,CAAP;AACD,OAnDM;;AAoDP;AACAI,MAAAA,MArDO,kBAqDAJ,CArDA,EAqDG;AACR,eAAO,KAAKV,WAAL,CAAiBc,MAAjB,CAAwBJ,CAAxB,CAAP;AACD;AAvDM,KAXQ;;AAoEjB;AACMK,IAAAA,OArEW,qBAqED;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEWnC,iBAAiB,iCACrCe,OADqC;AAExCqB,kBAAAA,SAAS,EAAErB,OAAO,CAACsB,QAFqB;AAGxCC,kBAAAA,YAAY,EAAEzB;AAH0B,mBAF5B;;AAAA;AAEd,gBAAA,MAAI,CAACO,WAFS;AAAA;;AAAA,sBAWVlB,MAAM,CAACK,QAAP,CAAgBgC,MAAhB,CAAuBC,QAAvB,CAAgC,OAAhC,KACAtC,MAAM,CAACK,QAAP,CAAgBgC,MAAhB,CAAuBC,QAAvB,CAAgC,QAAhC,CAZU;AAAA;AAAA;AAAA;;AAcRb,gBAAAA,OAAO,CAACc,GAAR,CAAY,mBAAZ,EAdQ,CAeV;;AAfU;AAAA,uBAgBiB,MAAI,CAACrB,WAAL,CAAiBQ,sBAAjB,EAhBjB;;AAAA;AAAA;AAgBFc,gBAAAA,QAhBE,yBAgBFA,QAhBE;AAkBV,gBAAA,MAAI,CAACpB,KAAL,GAAa,IAAb,CAlBU,CAoBV;AACA;;AACAV,gBAAAA,kBAAkB,CAAC8B,QAAD,CAAlB;;AAtBU;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBZ,gBAAA,MAAI,CAACpB,KAAL;;AAzBY;AAAA;AAAA;AAAA,uBA4BiB,MAAI,CAACF,WAAL,CAAiBF,eAAjB,EA5BjB;;AAAA;AA4BZ,gBAAA,MAAI,CAACA,eA5BO;AAAA;AAAA,uBA6BM,MAAI,CAACE,WAAL,CAAiBM,OAAjB,EA7BN;;AAAA;AA6BZ,gBAAA,MAAI,CAACP,IA7BO;AA8BZ,gBAAA,MAAI,CAACF,OAAL,GAAe,KAAf;AA9BY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCf;AArGgB,GAAR,CAAX;AAwGA,SAAOR,QAAP;AACD,CAjHM,C,CAmHP;;AACA,OAAO,IAAMkC,WAAW,GAAG;AACzBC,EAAAA,OADyB,mBACjB7C,GADiB,EACZgB,OADY,EACH;AACpBhB,IAAAA,GAAG,CAAC8C,SAAJ,CAAcC,KAAd,GAAsBnC,QAAQ,CAACI,OAAD,CAA9B;AACD;AAHwB,CAApB","sourcesContent":["import Vue from \"vue\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\n/** Define a default action to perform after authentication */\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nlet instance;\n\n/** Returns the current instance of the SDK */\nexport const getInstance = () => instance;\n\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = window.location.origin,\n  ...options\n}) => {\n  if (instance) return instance;\n\n  // The 'instance' is simply a Vue object\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(options, config) {\n        this.popupOpen = true;\n\n        try {\n          await this.auth0Client.loginWithPopup(options, config);\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = await this.auth0Client.isAuthenticated();\n          this.error = null;\n        } catch (e) {\n          this.error = e;\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n          this.error = null;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n      /** Gets the access token using a popup window */\n\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n    },\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        ...options,\n        client_id: options.clientId,\n        redirect_uri: redirectUri\n      });\n\n      try {\n        // If the user is returning to the app after authentication..\n        if (\n          window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")\n        ) {\n            console.log(\"this is the issue\")\n          // handle the redirect and retrieve tokens\n          const { appState } = await this.auth0Client.handleRedirectCallback();\n\n          this.error = null;\n\n          // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize our internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n  });\n\n  return instance;\n};\n\n// Create a simple Vue plugin to expose the wrapper object throughout the application\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n};\n"]}]}