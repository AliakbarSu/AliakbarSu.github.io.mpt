{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js!/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ali/Desktop/medical-test/src/components/containers/test/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/components/containers/test/test.vue","mtime":1628382182000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL0FsaS9EZXNrdG9wL21lZGljYWwtdGVzdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvQWxpL0Rlc2t0b3AvbWVkaWNhbC10ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IENpcmN1bGFyVGltZXIgZnJvbSAnLi4vLi4vVUkvY2lyY3VsYXItdGltZXIvY2lyY3VsYXItdGltZXInCmltcG9ydCB7IHF1ZXN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2R1bW15RGF0YSc7CmltcG9ydCBOYXZpZ2F0b3IgZnJvbSAnLi9jb21wb25lbnRzL25hdmlnYXRvci9uYXZpZ2F0b3InOwppbXBvcnQgQ2lyY2xlOCBmcm9tICd2dWUtbG9hZGluZy1zcGlubmVyL3NyYy9jb21wb25lbnRzL0NpcmNsZTgnOwppbXBvcnQgUHJvZ3Jlc3NCYXIgZnJvbSAnLi4vLi4vVUkvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzQmFyJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvbnM6IFtdLAogICAgICBxdWVzdGlvbjoge30sCiAgICAgIHN1Ym1pdHRlZF9xdWVzdGlvbnM6IFtdLAogICAgICBza2lwcGVkX3F1ZXN0aW9uczogW10sCiAgICAgIHN1Ym1pdHRlZF9hbnN3ZXI6IHt9LAogICAgICB0ZXN0RW5kc0luOiAwLAogICAgICBpbnRlcnZhbDogbnVsbCwKICAgICAgdGltZUxpbWl0OiAxLjI2ZSs3LAogICAgICB0aW1lUmVtYWluZWQ6IHsKICAgICAgICBoOiAwLAogICAgICAgIG06IDAsCiAgICAgICAgczogMCwKICAgICAgICBtaWw6IDAKICAgICAgfSwKICAgICAgaXNUaW1lT3ZlcjogZmFsc2UsCiAgICAgIGhhc1Rlc3RTdGFydGVkOiBmYWxzZSwKICAgICAgbG9hZGluZzogdHJ1ZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5hdmlnYXRvcjogTmF2aWdhdG9yLAogICAgQ2lyY2xlODogQ2lyY2xlOCwKICAgIFByb2dyZXNzQmFyOiBQcm9ncmVzc0JhcgogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMucXVlc3Rpb25zID0gcXVlc3Rpb25zOwogICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB0aGlzLnF1ZXN0aW9ucyA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q3VycmVudFRlc3QubWFwKGZ1bmN0aW9uIChxLCBpbmRleCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBxKSwge30sIHsKICAgICAgICBudW1iZXI6IGluZGV4ICsgMQogICAgICB9KTsKICAgIH0pOwogICAgdGhpcy5xdWVzdGlvbiA9IHRoaXMucXVlc3Rpb25zWzBdOwogICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRTdWJqZWN0c1BvaW50cyIsIHRoaXMucXVlc3Rpb25zKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0YXJ0OiBmdW5jdGlvbiBzdGFydCgpIHsKICAgICAgdGhpcy5zZXRUaW1lcigpOwogICAgICB2YXIgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VGVzdFN0YXJ0VGltZSIsIG5vdyk7CiAgICAgIHRoaXMucXVlc3Rpb24gPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMucXVlc3Rpb25zWzBdKSwge30sIHsKICAgICAgICBzdGFydEF0OiBub3cKICAgICAgfSk7CiAgICB9LAogICAgc2V0VGltZXI6IGZ1bmN0aW9uIHNldFRpbWVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuaW50ZXJ2YWwpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpOwogICAgICB9CgogICAgICB0aGlzLmhhc1Rlc3RTdGFydGVkID0gdHJ1ZTsKICAgICAgdGhpcy50ZXN0RW5kc0luID0gdGhpcy50aW1lTGltaXQgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgdmFyIHQgPSBfdGhpcy50ZXN0RW5kc0luIC0gbm93OwogICAgICAgIF90aGlzLnRpbWVSZW1haW5lZC5oID0gTWF0aC5mbG9vcih0ICUgKDEwMDAgKiA2MCAqIDYwICogMjQpIC8gKDEwMDAgKiA2MCAqIDYwKSk7CiAgICAgICAgX3RoaXMudGltZVJlbWFpbmVkLm0gPSBNYXRoLmZsb29yKHQgJSAoMTAwMCAqIDYwICogNjApIC8gKDEwMDAgKiA2MCkpOwogICAgICAgIF90aGlzLnRpbWVSZW1haW5lZC5zID0gTWF0aC5mbG9vcih0ICUgKDEwMDAgKiA2MCkgLyAxMDAwKTsKICAgICAgICBfdGhpcy50aW1lUmVtYWluZWQubWlsID0gdDsgLy8xLjI1MjhlKzcKCiAgICAgICAgaWYgKHQgPCAwKSB7CiAgICAgICAgICBjbGVhckludGVydmFsKF90aGlzLmludGVydmFsKTsKICAgICAgICAgIF90aGlzLmlzVGltZU92ZXIgPSB0cnVlOwoKICAgICAgICAgIF90aGlzLiRzd2FsLmZpcmUoJ1RpbWUgT3ZlcicsICdZb3VyIHRpbWUgaXMgb3ZlciEnLCAnZXJyb3InKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMuY2FsY3VsYXRlUmVzdWx0cygpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LCAxMDApOwogICAgfSwKICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoKSB7CiAgICAgIHRoaXMucmVtb3ZlUXVlc3Rpb24oKTsKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICB0aGlzLnN1Ym1pdHRlZF9xdWVzdGlvbnMucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMucXVlc3Rpb24pLCB7fSwgewogICAgICAgIHN1Ym1pdHRlZF9hbnN3ZXI6IHRoaXMuc3VibWl0dGVkX2Fuc3dlciwKICAgICAgICBlbmRBdDogbm93CiAgICAgIH0pKTsKICAgICAgdGhpcy5yZXNldEFuc3dlcnMoKTsKCiAgICAgIGlmICh0aGlzLmlzVGVzdE92ZXIpIHsKICAgICAgICB0aGlzLmNhbGN1bGF0ZVJlc3VsdHMoKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTGFzdFF1ZXN0aW9uKSB7CiAgICAgICAgdGhpcy5hcHBseVNraXBwZWRRdWVzdGlvbnMoKTsKICAgICAgfQoKICAgICAgdGhpcy5zZXROZXh0UXVlc3Rpb24oKTsKICAgIH0sCiAgICByZW1vdmVRdWVzdGlvbjogZnVuY3Rpb24gcmVtb3ZlUXVlc3Rpb24oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5xdWVzdGlvbnMgPSB0aGlzLnF1ZXN0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKHEpIHsKICAgICAgICByZXR1cm4gcS5pZCAhPT0gX3RoaXMyLnF1ZXN0aW9uLmlkOwogICAgICB9KTsKICAgIH0sCiAgICBzZXROZXh0UXVlc3Rpb246IGZ1bmN0aW9uIHNldE5leHRRdWVzdGlvbigpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgIHZhciBjdXJyZW50SW5kZXggPSB0aGlzLnF1ZXN0aW9ucy5maW5kSW5kZXgoZnVuY3Rpb24gKHEpIHsKICAgICAgICByZXR1cm4gcS5pZCA9PSBfdGhpczMucXVlc3Rpb25zLmlkOwogICAgICB9KTsKICAgICAgdGhpcy5xdWVzdGlvbiA9IGN1cnJlbnRJbmRleCA9PSB0aGlzLnF1ZXN0aW9ucy5sZW5ndGggLSAxID8gdGhpcy5xdWVzdGlvbiA6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5xdWVzdGlvbnNbY3VycmVudEluZGV4ICsgMV0pLCB7fSwgewogICAgICAgIHN0YXJ0QXQ6IG5vdwogICAgICB9KTsKICAgIH0sCiAgICBhcHBseVNraXBwZWRRdWVzdGlvbnM6IGZ1bmN0aW9uIGFwcGx5U2tpcHBlZFF1ZXN0aW9ucygpIHsKICAgICAgdGhpcy5xdWVzdGlvbnMgPSB0aGlzLnNraXBwZWRfcXVlc3Rpb25zOwogICAgICB0aGlzLnNraXBwZWRfcXVlc3Rpb25zID0gW107CiAgICB9LAogICAgY2FsY3VsYXRlUmVzdWx0czogZnVuY3Rpb24gY2FsY3VsYXRlUmVzdWx0cygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInN1Ym1pdFRlc3QiLCB0aGlzLnN1Ym1pdHRlZF9xdWVzdGlvbnMpOyAvLyB0aGlzLiRyb3V0ZXIucHVzaCgnL3Rlc3QtcmVzdWx0cycpCiAgICB9LAogICAgcmVzZXRBbnN3ZXJzOiBmdW5jdGlvbiByZXNldEFuc3dlcnMoKSB7CiAgICAgIHRoaXMuc3VibWl0dGVkX2Fuc3dlciA9IHt9OwogICAgICB0aGlzLnNob3dFeHBsYW5hdGlvbnMgPSBmYWxzZTsKICAgIH0sCiAgICBza2lwOiBmdW5jdGlvbiBza2lwKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMucmVtb3ZlUXVlc3Rpb24oKTsKICAgICAgdGhpcy5za2lwcGVkX3F1ZXN0aW9ucyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5za2lwcGVkX3F1ZXN0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKHNxKSB7CiAgICAgICAgcmV0dXJuIHNxLmlkICE9PSBfdGhpczQucXVlc3Rpb24uaWQ7CiAgICAgIH0pKSwgW3RoaXMucXVlc3Rpb25dKTsKCiAgICAgIGlmICh0aGlzLmlzTGFzdFF1ZXN0aW9uKSB7CiAgICAgICAgdGhpcy5hcHBseVNraXBwZWRRdWVzdGlvbnMoKTsKICAgICAgfQoKICAgICAgdGhpcy5yZXNldEFuc3dlcnMoKTsKICAgICAgdGhpcy5zZXROZXh0UXVlc3Rpb24oKTsKICAgIH0sCiAgICBlbmRUZXN0OiBmdW5jdGlvbiBlbmRUZXN0KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMuJHN3YWwoewogICAgICAgIHRpdGxlOiAnQXJlIHlvdSBzdXJlPycsCiAgICAgICAgdGV4dDogJ1lvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIHJldHVybiB0byB0aGlzIHRlc3QhJywKICAgICAgICBpY29uOiAnd2FybmluZycsCiAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ1llcywgZW5kIHRlc3QhJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnTm8sIGNvbnRpbnVlJwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIHZhbHVlID0gX3JlZi52YWx1ZTsKCiAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICBfdGhpczUuY2FsY3VsYXRlUmVzdWx0cygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0QW5zd2VyOiBmdW5jdGlvbiBzZWxlY3RBbnN3ZXIoYW5zd2VyKSB7CiAgICAgIHRoaXMuc3VibWl0dGVkX2Fuc3dlciA9IGFuc3dlcjsKICAgIH0sCiAgICBpc1NlbGVjdGVkOiBmdW5jdGlvbiBpc1NlbGVjdGVkKGFuc3dlcikgewogICAgICByZXR1cm4gdGhpcy5zdWJtaXR0ZWRfYW5zd2VyLmlkID09IGFuc3dlci5pZDsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc1Rlc3RPdmVyOiBmdW5jdGlvbiBpc1Rlc3RPdmVyKCkgewogICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbnMubGVuZ3RoID09IDAgJiYgdGhpcy5za2lwcGVkX3F1ZXN0aW9ucy5sZW5ndGggPT0gMCB8fCB0aGlzLmlzVGltZU92ZXI7CiAgICB9LAogICAgaXNMYXN0UXVlc3Rpb246IGZ1bmN0aW9uIGlzTGFzdFF1ZXN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbnMubGVuZ3RoID09PSAwOwogICAgfSwKICAgIHRpbWVQcm9ncmVzczogZnVuY3Rpb24gdGltZVByb2dyZXNzKCkgewogICAgICByZXR1cm4gMTAwIC0gKHRoaXMudGltZUxpbWl0IC0gdGhpcy50aW1lUmVtYWluZWQubWlsKSAvIHRoaXMudGltZUxpbWl0ICogMTAwOwogICAgfQogIH0KfTs="},{"version":3,"sources":["test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-container>\n  <div class=\"test\">\n\n    <div v-if=\"loading\" class=\"spinner__container\">\n      <Circle8></Circle8>\n    </div>\n    <div class=\"content\">\n      <Navigator @start=\"start\" v-if=\"!hasTestStarted && !loading\"/>\n      <div v-else>\n        <div v-if=\"!loading\">\n          <span>Time Remaining: </span>\n          <span>{{timeRemained.h}} : {{timeRemained.m}} : {{timeRemained.s}}</span>\n          <ProgressBar :progress=\"timeProgress\"/>\n        </div>\n        <div class=\"question\" v-if=\"!loading\">\n          <span>Question: {{question.number}}</span>\n          <p class=\"question__question\" v-html=\"question.title\"></p>\n          <div v-if=\"question.images && question.media.length\" class=\"content__thumbnail\">\n            <img :src=\"question.media[0]\" class=\"content__img\">\n          </div>\n          <!-- <CircularTimer/> -->\n          <ul class=\"question__answers\">\n            <li class=\"question__answer\" \n              v-for=\"choice in question.options\" \n              :key=\"choice.id\">\n                <i v-if=\"!isSelected(choice)\" class=\"far fa-dot-circle\" @click=\"selectAnswer(choice)\" ></i>\n                <i v-else \n                  @click=\"selectAnswer(choice)\" \n                  class=\"fas fa-dot-circle\" \n                ></i>\n                <span \n                  @click=\"selectAnswer(choice)\" \n                  class=\"answer__text\" \n                >({{choice.id}}) {{choice.text}}</span>\n              </li>\n          </ul>\n        </div>\n        <div class=\"actions\" v-if=\"!loading\">\n          <button class=\"actions__action\" @click=\"next\">Next</button>\n          <button class=\"actions__action actions--yellow\" @click=\"skip\">Flag</button>\n          <button class=\"actions__action actions--red\" @click=\"endTest\">End test</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  </v-container>\n</template>\n\n<script>\n// import CircularTimer from '../../UI/circular-timer/circular-timer'\nimport { questions } from '../../../dummyData'\nimport Navigator from './components/navigator/navigator'\nimport Circle8 from 'vue-loading-spinner/src/components/Circle8'\nimport ProgressBar from '../../UI/progress-bar/progressBar'\n\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      question: {},\n      submitted_questions: [],\n      skipped_questions: [],\n      submitted_answer: {},\n      testEndsIn: 0,\n      interval: null,\n      timeLimit: 1.26e+7,\n      timeRemained: {h: 0, m: 0, s: 0, mil: 0},\n      isTimeOver: false,\n      hasTestStarted: false,\n      loading: true\n    }\n  },\n  components: {\n    Navigator,\n    Circle8,\n    ProgressBar\n  },\n  mounted() {\n    this.questions = questions\n    this.loading = false\n    this.questions = this.$store.getters.getCurrentTest.map((q, index) => ({...q, number: index + 1}))\n    this.question = this.questions[0]\n    this.$store.commit(\"setSubjectsPoints\", this.questions)\n  },\n  methods: {\n    start() {\n      this.setTimer()\n      const now = new Date().getTime(); \n      this.$store.commit(\"setTestStartTime\", now)\n      this.question = {...this.questions[0], startAt: now}\n    },\n    setTimer() {\n      if(this.interval) {\n        clearInterval(this.interval)\n      }\n      this.hasTestStarted = true\n      this.testEndsIn = this.timeLimit + new Date().getTime()\n      this.interval = setInterval(() => {\n        const now = new Date().getTime()\n        const t = this.testEndsIn - now\n        this.timeRemained.h = Math.floor((t%(1000 * 60 * 60 * 24))/(1000 * 60 * 60))\n        this.timeRemained.m = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60))\n        this.timeRemained.s = Math.floor((t % (1000 * 60)) / 1000)\n        this.timeRemained.mil = t\n        //1.2528e+7\n        if (t < 0) { \n          clearInterval(this.interval)\n          this.isTimeOver = true\n          this.$swal.fire(\n            'Time Over',\n            'Your time is over!',\n            'error'\n          ).then(() => {\n            this.calculateResults()\n          })\n          \n        } \n      }, 100)\n    },\n    next() {\n      this.removeQuestion()\n      const now = new Date().getTime()\n      this.submitted_questions.push({\n        ...this.question, \n        submitted_answer: this.submitted_answer,\n        endAt: now\n      })\n\n      this.resetAnswers()\n\n\n      if(this.isTestOver) {\n        this.calculateResults()\n      }else if(this.isLastQuestion) {\n        this.applySkippedQuestions()\n      }\n\n      this.setNextQuestion()\n    },\n    removeQuestion() {\n      this.questions = this.questions.filter(q => q.id !== this.question.id)\n    },\n    setNextQuestion() {\n      const now = new Date().getTime()\n      const currentIndex = this.questions.findIndex(q => q.id == this.questions.id)\n      this.question = currentIndex == this.questions.length - 1 ? this.question : {...this.questions[currentIndex + 1], startAt: now}\n    },\n    applySkippedQuestions() {\n      this.questions = this.skipped_questions\n      this.skipped_questions = []\n    },\n    calculateResults() {\n      this.$store.dispatch(\"submitTest\", this.submitted_questions)\n      // this.$router.push('/test-results')\n    },\n    resetAnswers() {\n      this.submitted_answer = {}\n      this.showExplanations = false\n    },\n    skip() {\n      this.removeQuestion()\n      this.skipped_questions = [...this.skipped_questions.filter(sq => sq.id !== this.question.id), this.question]\n      if(this.isLastQuestion) {\n        this.applySkippedQuestions()\n      }\n      this.resetAnswers()\n      this.setNextQuestion()\n    },\n    endTest() {\n      this.$swal({\n        title: 'Are you sure?',\n        text: 'You will not be able to return to this test!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, end test!',\n        cancelButtonText: 'No, continue'\n      }).then(({value}) => {\n        if(value) {\n          this.calculateResults()\n        }\n      })    \n    },\n    selectAnswer(answer) {\n      this.submitted_answer = answer\n    },\n    isSelected(answer) {\n      return this.submitted_answer.id == answer.id\n    },\n  },\n  computed: {\n    isTestOver() {\n      return (this.questions.length == 0 && this.skipped_questions.length == 0 )|| this.isTimeOver\n    },\n    isLastQuestion() {\n      return this.questions.length === 0\n    },\n    timeProgress() {\n      return 100 - (((this.timeLimit - this.timeRemained.mil) / this.timeLimit) * 100)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.test {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n}\n\n.content {\n  padding: 12px;\n  text-align: left;\n  @media(min-width: 1200px) {\n    width: 1200px;\n    margin: auto;\n  }\n  font-family: 'Roboto', sans-serif;\n}\n\n.content__thumbnail {\n  display: flex;\n  justify-content: center;\n}\n\n.content__img {\n  width: auto;\n  height: 30vh;\n}\n\n.mode__btn-container {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.mode__btn {\n  border: none;\n  padding: 12px;\n  width: 120px;\n  background: #8d8df5;\n  border: 1px solid #8d8df5;\n  color: white;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    background: white;\n    color: #8d8df5;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n}\n\n.question__question {\n  margin-top: 20px;\n}\n\n.question__answer {\n  padding: 5px;\n}\n\n\n\n.answer__text {\n  cursor: pointer;\n  padding-left: 8px;\n}\n\n\n.answer__text--correct {\n  color: #9adc9a;\n}\n\n.answer__text--wrong {\n  color: #f36c6c;\n}\n\n.fa-dot-circle {\n  cursor: pointer;\n}\n\n\n.question__answers {\n  border-top: 1px solid #e6e6e6;\n  padding: 12px 50px;\n  list-style: none;\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.actions__action {\n  position: relative;\n  overflow: hidden;\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-right: 10px;\n  background: #70bf70;\n  border: 1px solid #70bf70;\n  color: white;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  outline: none;\n  &:hover {\n    cursor: pointer;\n    transition: 0.3s;\n    background: white;\n    color: #70bf70;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n  &:active {\n    outline: none;\n  }\n}\n\n\n.actions__action:after {\n  content: \"\";\n  background: #f1f1f1;\n  display: block;\n  position: absolute;\n  padding-top: 300%;\n  padding-left: 350%;\n  margin-left: -20px !important;\n  margin-top: -120%;\n  opacity: 0;\n  transition: all 0.8s\n}\n\n.actions__action:active:after {\n  padding: 0;\n  margin: 0;\n  opacity: 1;\n  transition: 0s\n}\n\n.spinner__container {\n  position: absolute;\n  left: 0;\n  right: 0;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  top: 0;\n  bottom: 0;\n  align-items: center;\n  background: #7575759e;\n}\n\n.actions--red {\n  background: #f36c6c;\n  border: 1px solid #f36c6c;\n  &:hover {\n    color: #f36c6c;\n  }\n}\n\n\n.actions--yellow {\n  background: #c5c56d;\n  border: 1px solid #c5c56d;\n  &:hover {\n    color: #c5c56d;\n  }\n}\n\n.question__explanation {\n  padding: 12px;\n  border-radius: 5px;\n  margin-top: 5px;\n}\n\n.question__explanation--red {\n  background: #ef5e5e;\n}\n\n.question__explanation--green {\n  background: #60e460;\n}\n\n\n</style>"],"sourceRoot":"src/components/containers/test"}]}