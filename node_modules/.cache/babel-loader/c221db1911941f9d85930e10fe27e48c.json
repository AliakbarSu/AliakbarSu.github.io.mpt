{"remainingRequest":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js!/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ali/Desktop/medical-test/src/components/containers/admin/questions/questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Ali/Desktop/medical-test/src/components/containers/admin/questions/questions.vue","mtime":1627368454000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Ali/Desktop/medical-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["questions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"questions__main\">\n      <h1 class=\"title\">Questions Admin Dashboard</h1>\n      <div v-if=\"loading\" class=\"spinner-container\">\n          <Circle8/>\n      </div>\n      <div class=\"question__update\">\n            <div class=\"update\" v-if=\"question.key\">\n                <div class=\"question__heading\">\n                    <span class=\"question__id--update\"><strong>ID: </strong>{{question.id}}</span>\n                    <span class=\"question__id--number\"><strong>Question: </strong>{{question.number}}</span>\n                </div>\n                <ckeditor :editor=\"editor\" v-model=\"question.question\" :config=\"editorConfig\"></ckeditor>\n                <div v-for=\"choice in question.choices\" :key=\"choice.id\" :class=\"{'editor--green-borders': choice.isCorrect}\">\n                    <ckeditor v-model=\"choice.text\" :editor=\"editor\" :config=\"editorConfig\"></ckeditor>\n                </div>\n                <div v-if=\"question.key\"><Options :optionsProps=\"options\" @optionSelected=\"selectOption\"/></div>\n                <div class=\"status\" v-if=\"question.key\">\n                    <p class=\"status__items\">Grammer: {{question.grammerModified ? \"Yes\" : \"No\"}}</p>\n                    <p class=\"status__items\">Context: {{question.contextModified ? \"Yes\" : \"No\"}}</p>\n                    <p class=\"status__items\">Choices: {{question.choicesModified ? \"Yes\" : \"No\"}}</p>\n                </div>\n                <div class=\"update__actions\" v-if=\"question.key\">\n                    <button class=\"actions__action\" @click=\"editQuestion(question.key)\">Save</button>\n                    <button class=\"actions__action actions--yellow\" @click=\"suspend(question.key)\">{{question.active ? 'Suspend' : 'Unsuspend'}}</button>\n                    <button class=\"actions__action actions--red\" @click=\"deleteQuestion(question.key)\">Delete</button>\n                    <button class=\"actions__action actions--orange\" @click=\"returnBack()\">Return</button>\n                </div>\n            </div>\n      </div>\n      <div class=\"warning__container\" v-if=\"!questions.length && !loading\">\n          <h1 class=\"warning__text\">No question to display</h1>\n      </div>\n      <div class=\"questions\" v-if=\"questions\">\n            <div v-for=\"question in questions\" :key=\"question.id\" class=\"question\" :class=\"{'question--active': isActive(question.key)}\">\n                <div class=\"question__heading\">\n                    <span class=\"question__id\"><strong>ID: </strong>{{question.id}}</span>\n                    <span class=\"question__number\"><strong>Question: </strong>{{question.number}}</span>\n                </div>\n                <p class=\"question__question\" v-html=\"question.question\"></p>\n                <div class=\"status status--nopadding\">\n                    <p class=\"status__items\">Grammer: {{question.grammerModified ? \"Yes\" : \"No\"}}</p>\n                    <p class=\"status__items\">Context: {{question.contextModified ? \"Yes\" : \"No\"}}</p>\n                    <p class=\"status__items\">Choices: {{question.choicesModified ? \"Yes\" : \"No\"}}</p>\n                </div>\n                <div class=\"question__actions\">\n                    <button class=\"actions__action\" @click=\"edit($event, question.key)\">Edit</button>\n                    <button class=\"actions__action actions--yellow\" @click=\"suspend(question.key)\">{{question.active ? 'Suspend' : 'Unsuspend'}}</button>\n                    <button class=\"actions__action actions--red\" @click=\"deleteQuestion(question.key)\">Delete</button>\n                </div>\n            </div>\n      </div>\n    </div>\n</template>\n\n<script>\nimport firestore from '../../../../../firebase'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\nimport Options from './components/checkbox/checkbox'\nimport Circle8 from 'vue-loading-spinner/src/components/Circle8'\n\nexport default {\n    data() {\n        return {\n            editor: ClassicEditor,\n            editorConfig: {},\n            questionsArray: [],\n            question: {},\n            currentLocation: 0,\n            options: [\"Context\", \"Choices\", \"Grammer\"],\n            selectedOptions: [],\n            loading: false,\n            el: null\n        }\n    },\n    async created() {\n        this.loading = true\n        try {\n            const questionsDoc = await firestore.db.collection(\"modifiedQuestions\").get()\n            const questionsArray = []\n            questionsDoc.forEach(snapshot => {\n                questionsArray.push({...snapshot.data(), key: snapshot.id})\n            })\n            this.questionsArray = questionsArray.map((q, index) => ({...q, number: index + 1}))\n            this.loading = false\n            return Promise.resolve()\n        }catch(err) {\n            console.log(err)\n            this.$swal.fire(\n                'Error Occured',\n                'Failed to fetch questions!',\n                'error'\n            ); \n            this.loading = false\n        }\n        \n    },\n    components: {\n        Options,\n        Circle8\n    },\n    methods: {\n        selectOption(options) {\n            this.selectedOptions = options\n        },\n        edit(event, key) {\n            if(this.isEditing) {\n                this.$swal({\n                    title: 'Are you sure?',\n                    text: 'Your changes will be discarted',\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Yes, discart',\n                    cancelButtonText: 'No, keep changes'\n                }).then(({value}) => {\n                    if(value) {\n                        this.proceedWithEdit(event, key)\n                    }\n                })    \n            }else {\n                this.proceedWithEdit(event, key)\n            }\n        },\n        suspend(key) {\n            this.loading = true\n            const question = this.questions.find(q => q.key == key)\n            let changeTo = true\n            if(question.active) {\n                changeTo = false\n            }\n            firestore.db.collection(\"modifiedQuestions\").doc(key).update({\n                active: changeTo\n            })\n            .then(() => {\n                this.questionsArray = this.questionsArray.map(q => {\n                    if(q.key == key) {\n                        q.active = changeTo\n                    }\n                    return q\n                })\n                this.question.active = changeTo\n                this.loading = false\n            })\n            .catch(err => {\n                console.log(err); \n                this.$swal.fire(\n                    'Error Occured',\n                    'Something went wrong!',\n                    'error'\n                ); \n                this.loading = false\n            })\n        },\n        async deleteQuestion(key) {\n            this.loading = true\n            firestore.db.collection(\"modifiedQuestions\").doc(key).delete()\n            .then(() => {\n                if(this.question.key == key) {\n                    this.question = {}\n                }\n                this.questionsArray = this.questions.filter(q => q.key !== key)\n                this.returnBack()\n                this.loading = false\n            }).catch(err => {\n                console.log(err); \n                this.$swal.fire(\n                    'Error Occured',\n                    'Something went wrong!',\n                    'error'\n                ); \n                this.loading = false\n            })\n        },\n        async editQuestion(keyId) {\n            // const question = this.questions.find(q => q.key == keyId)\n            this.loading = true\n            firestore.db.collection(\"modifiedQuestions\").doc(keyId).update({\n                question: this.question.question,\n                choices: this.question.choices,\n                choicesModified: this.isModified(\"choices\"),\n                grammerModified: this.isModified(\"grammer\"),\n                contextModified: this.isModified(\"context\")\n            })\n            .then(() => {\n                const questionIndex = this.questions.findIndex(q => q.key == keyId)\n                this.questionsArray[questionIndex].question = this.question.question\n                this.questionsArray[questionIndex].choices = this.question.choices\n                this.questionsArray[questionIndex].choicesModified = this.isModified(\"choices\")\n                this.questionsArray[questionIndex].contextModified = this.isModified(\"context\")\n                this.questionsArray[questionIndex].grammerModified = this.isModified(\"grammer\")\n                this.loading = false\n            })\n            .catch(err => {\n                console.log(err); \n                this.$swal.fire(\n                    'Error Occured',\n                    'Something went wrong!',\n                    'error'\n                ); \n                this.loading = false\n            })\n\n        },\n        isModified(value) {\n            return this.selectedOptions.filter(op => op.value.toLowerCase() == value.toLowerCase() && op.state).length > 0\n        },\n        toggleEditing() {\n            this.isEditing = true\n        },\n        proceedWithEdit(event, key) {\n            this.question = this.questions.find(q => q.key == key)\n            this.el = event.target\n            this.scrollToTop()\n        },\n        scrollToTop() {\n            window.scroll({\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            })\n        },\n        returnBack() {\n            this.el.scrollIntoView({ behavior: 'smooth', block: \"center\" })\n        },\n        isActive(key) {\n            return key == this.question.key\n        }\n    },\n    computed: {\n        questions() {\n            return this.questionsArray\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n\n.questions__main {\n    font-family: sans-serif;\n}\n\n.title {\n    width: 100%;\n    padding: 12px;\n    text-align: center;\n}\n\n.questions {\n    padding: 12px;\n    font-family: sans-serif;\n}\n\n.question {\n    padding: 20px;\n    width: 80%;\n    margin-top: 10px;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n}\n\n.question__id--update {\n    padding: 12px;\n    display: block;\n}\n\n.question--active {\n    background: #eab75a;\n}\n\n\n.actions__action {\n  position: relative;\n  overflow: hidden;\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-right: 10px;\n  background: #70bf70;\n  border: 1px solid #70bf70;\n  color: white;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  outline: none;\n  &:hover {\n    cursor: pointer;\n    transition: 0.3s;\n    background: white;\n    color: #70bf70;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n  &:active {\n    outline: none;\n  }\n}\n\n\n.actions__action:after {\n  content: \"\";\n  background: #f1f1f1;\n  display: block;\n  position: absolute;\n  padding-top: 300%;\n  padding-left: 350%;\n  margin-left: -20px !important;\n  margin-top: -120%;\n  opacity: 0;\n  transition: all 0.8s\n}\n\n.actions__action:active:after {\n  padding: 0;\n  margin: 0;\n  opacity: 1;\n  transition: 0s\n}\n\n\n.actions--red {\n  background: #f36c6c;\n  border: 1px solid #f36c6c;\n  &:hover {\n    color: #f36c6c;\n  }\n}\n\n\n.actions--yellow {\n  background: #c5c56d;\n  border: 1px solid #c5c56d;\n  &:hover {\n    color: #c5c56d;\n  }\n}\n\n.update {\n    font-family: sans-serif;\n    padding: 12px;\n    width: 95%;\n    border-radius: 5px;\n    margin: auto;\n    margin-bottom: 7%;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n}\n\n.update__actions {\n    padding: 12px;\n}\n\n\n.actions__action {\n  position: relative;\n  overflow: hidden;\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-right: 10px;\n  background: #70bf70;\n  border: 1px solid #70bf70;\n  color: white;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  outline: none;\n  &:hover {\n    cursor: pointer;\n    transition: 0.3s;\n    background: white;\n    color: #70bf70;\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n  }\n  &:active {\n    outline: none;\n  }\n}\n\n\n.actions__action:after {\n  content: \"\";\n  background: #f1f1f1;\n  display: block;\n  position: absolute;\n  padding-top: 300%;\n  padding-left: 350%;\n  margin-left: -20px !important;\n  margin-top: -120%;\n  opacity: 0;\n  transition: all 0.8s\n}\n\n.actions__action:active:after {\n  padding: 0;\n  margin: 0;\n  opacity: 1;\n  transition: 0s\n}\n\n\n.actions--red {\n  background: #f36c6c;\n  border: 1px solid #f36c6c;\n  &:hover {\n    color: #f36c6c;\n  }\n}\n\n\n.actions--yellow {\n  background: #c5c56d;\n  border: 1px solid #c5c56d;\n  &:hover {\n    color: #c5c56d;\n  }\n}\n\n.actions--orange {\n    background: #eab516;\n    border: 1px solid #eab516;\n    &:hover {\n        color: #eab516;\n    }\n}\n\n.status  {\n    padding: 0 12px;\n    display: flex;\n}\n\n.status--nopadding {\n    padding: 0;\n}\n\n.status__items {\n    margin-right: 12px;\n}\n\n.spinner-container {\n    position: fixed;\n    z-index: 10;\n    left: 0;\n    right: 0;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    top: 0;\n    bottom: 0;\n    align-items: center;\n    background: #7575759e;\n}\n\n.editor--green-borders {\n    border: 4px solid #56f156;\n}\n\n\n.question__heading {\n    display: flex;\n    justify-content: space-between;\n}\n\n.warning__container {\n    height: 90vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.warning__text {\n    font-size: 18px;\n}\n\n</style>"],"sourceRoot":"src/components/containers/admin/questions"}]}